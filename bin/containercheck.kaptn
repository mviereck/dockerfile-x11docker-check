#! /usr/bin/kaptain
start "x11docker container security and feature check"  -> tabs buttonline ;

  tabs:tabbed -> xserver gpu container features;
        
    xserver:framed "X server security check" -> xserver_info mouse keyboard windows clipboard;
      xserver_info        -> @text=" Some checks for X security leaks. \n Most of interest for x11docker option --hostdisplay, especially along with --clipboard or --gpu. \n The common X + Docker setup with '-v /tmp/.X11-unix:/tmp/.X11-unix --env DISPLAY' is affected, too." ;
      mouse "Mouse events" -> xeyes;
        xeyes             -> @fork("jumpxeyes")="Watch mouse movement with xeyes";
      keyboard "Keyboard events and remote host control" -> keyboard_info xinput xdotool;
        keyboard_info " Keylogging and remote host control is the most dangerous part in running container applications on X. \n x11docker option --hostdisplay along with --gpu or --clipboard allows it." -> "" ;
        xinput            -> @fork("xterm -hold -e 'keylogger'")="Run keylogger with xinput";
        xdotool           -> @fork("xterm -hold -e formatc")="Try to run a terminal on host with xdotool";
      windows "Application windows" -> xwininfo xev;
        xwininfo          -> @fork("showoutput windowlist")="Show a list of accessable application windows with xwininfo";
        xev               -> @fork("xterm -hold -e 'xev -root'")="Watch window events with xev";
      clipboard "Clipboard" -> xclip;
        xclip             -> @fork("showoutput clipboard")="Show content of clipboard with xclip";

    gpu:framed " GPU video memory leak" -> palinopsia glx @fill;
      palinopsia "Palinopsia leak" -> palinopsia_info palinopsia_button;
        palinopsia_info   -> @text=" GPU drivers do not clean video memory when an application allocates it. \n This affects x11docker option --gpu. \n Former video content can be viewed and even survives a reboot. \n Compare:  https://hsmr.cc/palinopsia";
        palinopsia_button -> @fork("xterm -hold -e 'palinopsia 800 600 256'")="View some GPU video memory (palinopsia leak). Scroll with arrow keys.";
      glx "Hardware acceleration checks" -> glx_info glxgears glxspheres glxinfo;
        glx_info          -> @text="Check whether hardware acceleration works. \n glxgears and glxspheres should show a frame rate matching your monitor, mostly about 60 frames/second. \n glxinfo should show your video card name. If the name contains llvmpipe, software rendering is used." ;
        glxgears          -> @fork("xterm -hold -e glxgears")="Run glxgears";
        glxspheres        -> @fork("xterm -hold -e glxspheres64")="Run glxspheres";
        glxinfo           -> @fork("xterm -hold -e 'glxinfo | grep OpenGL'")="Run glxinfo";
      
    container:framed "Container capabilities" -> capabilities network ipc processes @fill;
      capabilities "Capabilities" -> capabilities_info capsh; 
        capabilities_info " Capabilities allow access to system resources for root user and suid applications. \n Regular user application should need none of them. \n Docker has a default set of allowed capabilties. x11docker drops them all in default setups. \n Your host is at risk if capabilities other than docker default are available." -> "";
        capsh             -> @fork("showoutput capcheck")="Check process capabilities";
      network "Network" -> network_info netstat tulpen iptraf;
        network_info      -> @text=" Network namespacing is a quite important part of container isolation. \n If you run with docker run option --network=host or x11docker option --hostnet, \n applications in container can access e.g. DBus on host and communicate with host applications.";
        netstat           -> @fork("showoutput 'netstat'")="Show output of netstat";
        tulpen            -> @fork("showoutput 'netstat -tulpen'")="Show output of netstat -tulpen";
        iptraf            -> @fork("xterm -hold -e iptraf-ng")="Show network traffic with iptraf";
      ipc "IPC Shared memory" -> ipc_info lsipc;
        ipc_info          -> @text=" Shared memory allows some interprocess communication and data exchange. \n Option --hostipc disables IPC namespacing. It is enabled if using --hostdisplay along with --gpu or --clipboard.";
        lsipc             -> @fork("showoutput showipc")="Show output of lsipc";
      processes "Processes" -> pstree;
        pstree            -> @fork("showoutput pstree")="Show process tree with pstree";
        
    features:framed "Miscellaneous" -> sound webcam printer @fill;
      sound "Sound" -> sound_info soundalsa soundpulse;
        sound_info        -> @text=" Sound check for options --alsa and --pulsaudio";
        soundalsa         -> @fork("xterm -hold -e soundcheck-alsa")="Sound check ALSA";
        soundpulse        -> @fork("xterm -hold -e soundcheck-pulse")="Sound check Pulseaudio";
      webcam "Webcam" -> webcam_info webcam_capture;
        webcam_info       -> @text=" Webcam capture with option --webcam";
        webcam_capture    -> @fork("xterm -hold -e 'vgrabbj -a -F 4 | feh - '")="Webcam capture";
      printer "Printer" -> lpstat;
        lpstat            -> @fork("showoutput 'lpstat -s'")="Show a list of printers provided by CUPS";
        
    buttonline:beside -> bash @close="Exit";
      bash              -> @fork("xfce4-terminal")="Run a bash terminal";
