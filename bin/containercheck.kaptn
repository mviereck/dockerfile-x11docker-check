#! /usr/bin/kaptain
start "x11docker container security and feature check"  -> mainframe buttonline ;

  mainframe:framed -> gpu xserver features container;
    gpu " GPU video memory leak" -> gpu_info gpu_buttons gpu_buttons2;
      gpu_info " GPU drivers do not clean video memory when an application allocates it. This affects x11docker option --gpu. \n Former video content can be viewed and even survives a reboot. Compare:  https://hsmr.cc/palinopsia" -> "";
      gpu_buttons:beside -> palinopsia;
        palinopsia -> @fork("palinopsia 800 600 256")="View some GPU video memory (palinopsia leak). Scroll with arrow keys.";
      gpu_buttons2:beside -> glxgears glxspheres glxinfo;
        glxgears   -> @fork("xterm -hold -e glxgears")="Run glxgears";
        glxspheres -> @fork("xterm -hold -e glxspheres64")="Run glxspheres";
        glxinfo    -> @fork("xterm -hold -e 'glxinfo | grep OpenGL'")="Run glxinfo";
        
    xserver:framed "X server security check" -> xserver_info mouse keyboard windows;
      xserver_info -> @text=" Some checks for X security leaks. \n Most of interest for x11docker option --hostdisplay along with --clipboard or --gpu. \n The common X + Docker setup with '-v /tmp/.X11-unix:/tmp/.X11-unix --env DISPLAY' is affected, too." ;
      mouse "Mouse events" -> mouse_info mouse_buttons;
        mouse_info " Mouse movements and window mouse events are visible only within the parent X server. \n With option --hostdisplay all movements and events are visible." -> "";
        mouse_buttons:beside -> xeyes xev;
          xeyes      -> @fork("xeyes")="Watch mouse movement with xeyes";
          xev        -> @fork("xterm -hold -e 'xev -root'")="Watch window events with xev";
      
      keyboard "Keyboard events and remote host control" -> keyboard_info keyboard_buttons;
        keyboard_info " Keylogging and remote host control is the most dangerous part in running container applications on X. \n x11docker option --hostdisplay along with --gpu or --clipboard allows it." -> "" ;
        keyboard_buttons:beside -> xinput xkbwatch xdotool;
          xinput     -> @fork("xterm -hold -e 'keylogger'")="Run keylogger with xinput";
          xkbwatch   -> @fork("xkbwatch")="Show state of switch keys with xkbwatch";
          xdotool    -> @fork("formatc")="Try to run a terminal on host with xdotool";
      
      windows "Application windows and clipboard" -> windows_buttons;
        windows_buttons:beside -> xwininfo xclip;
          xwininfo   -> @fork("windowlist")="Show a list of accessable application windows with xwininfo";
          xclip      -> @fork("clipboard")="Show content of clipboard with xclip";
        
    features "Sound and webcam" -> features_info features_buttons;
      features_info " Options --alsa, --pulsaudio and --webcam" -> "";
      features_buttons:beside -> soundalsa soundpulse webcam;
        soundalsa  -> @fork("xterm -hold -e soundcheck-alsa")="Sound check ALSA";
        soundpulse -> @fork("xterm -hold -e soundcheck-pulse")="Sound check Pulseaudio";
        webcam     -> @fork("xterm -hold -e 'vgrabbj | feh - '")="Webcam capture";
      
    container "Capabilities" -> container_info container_buttons;
      container_info " Capabilities allow access to system resources for root user and suid applications. \n Regular user application should need none of them. \n Docker has a default set of allowed capabilties. x11docker drops them all in default setups." -> "";
      container_buttons:beside -> capsh;
        capsh      -> @fork("capcheck")="Check process capabilities";
        
    buttonline:beside -> bash @close="Exit";
      bash           -> @fork("xfce4-terminal")="Run a bash terminal";
